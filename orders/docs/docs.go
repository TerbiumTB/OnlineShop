// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create/{user_id}": {
            "post": {
                "description": "Оформляет заказ",
                "tags": [
                    "Order Manage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Детали заказа",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/get": {
            "get": {
                "description": "Получить все заказы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Info"
                ],
                "responses": {
                    "200": {
                        "description": "Информация о заказе",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Order"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get/{id}": {
            "get": {
                "description": "Получить заказ по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Info"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID заказа",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о заказе",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateOrderRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 500
                },
                "descr": {
                    "type": "string",
                    "example": "Labuba"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/model.Status"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.Status": {
            "type": "string",
            "enum": [
                "CREATED"
            ],
            "x-enum-varnames": [
                "CREATED"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/order/",
	Schemes:          []string{},
	Title:            "Orders",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
